"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmessenger_mf"] = self["webpackChunkmessenger_mf"] || []).push([["node_modules_react-timeago_es6_index_js-_a2751"],{

/***/ "./node_modules/react-timeago/es6/dateParser.js":
/*!******************************************************!*\
  !*** ./node_modules/react-timeago/es6/dateParser.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ dateParser)\n/* harmony export */ });\nfunction dateParser(date) {\n  const parsed = new Date(date);\n  if (!Number.isNaN(parsed.valueOf())) {\n    return parsed;\n  }\n  const parts = String(date).match(/\\d+/g);\n  if (parts == null || parts.length <= 2) {\n    return parsed;\n  } else {\n    const [firstP, secondP, ...restPs] = parts.map(x => parseInt(x));\n    const correctedParts = [firstP, secondP - 1, ...restPs];\n    const isoDate = new Date(Date.UTC(...correctedParts));\n    return isoDate;\n  }\n}\n\n//# sourceURL=webpack://messenger_mf/./node_modules/react-timeago/es6/dateParser.js?");

/***/ }),

/***/ "./node_modules/react-timeago/es6/defaultFormatter.js":
/*!************************************************************!*\
  !*** ./node_modules/react-timeago/es6/defaultFormatter.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ defaultFormatter)\n/* harmony export */ });\nfunction defaultFormatter(value, _unit, suffix) {\n  const unit = value !== 1 ? _unit + 's' : _unit;\n  return value + ' ' + unit + ' ' + suffix;\n}\n\n//# sourceURL=webpack://messenger_mf/./node_modules/react-timeago/es6/defaultFormatter.js?");

/***/ }),

/***/ "./node_modules/react-timeago/es6/index.js":
/*!*************************************************!*\
  !*** ./node_modules/react-timeago/es6/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TimeAgo)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _dateParser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dateParser */ \"./node_modules/react-timeago/es6/dateParser.js\");\n/* harmony import */ var _defaultFormatter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaultFormatter */ \"./node_modules/react-timeago/es6/defaultFormatter.js\");\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n\n\n\n// Just some simple constants for readability\nconst MINUTE = 60;\nconst HOUR = MINUTE * 60;\nconst DAY = HOUR * 24;\nconst WEEK = DAY * 7;\nconst MONTH = DAY * 30;\nconst YEAR = DAY * 365;\nconst defaultNow = () => Date.now();\nfunction TimeAgo({\n  date,\n  formatter = _defaultFormatter__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n  component = 'time',\n  live = true,\n  minPeriod = 0,\n  maxPeriod = WEEK,\n  title,\n  now = defaultNow,\n  ...passDownProps\n}) {\n  const [timeNow, setTimeNow] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(now());\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!live) {\n      return;\n    }\n    const tick = () => {\n      const then = (0,_dateParser__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(date).valueOf();\n      if (!then) {\n        console.warn('[react-timeago] Invalid Date provided');\n        return 0;\n      }\n      const seconds = Math.round(Math.abs(timeNow - then) / 1000);\n      const unboundPeriod = seconds < MINUTE ? 1000 : seconds < HOUR ? 1000 * MINUTE : seconds < DAY ? 1000 * HOUR : 1000 * WEEK;\n      const period = Math.min(Math.max(unboundPeriod, minPeriod * 1000), maxPeriod * 1000);\n      if (period) {\n        return setTimeout(() => {\n          setTimeNow(now());\n        }, period);\n      }\n      return 0;\n    };\n    const timeoutId = tick();\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [date, live, maxPeriod, minPeriod, now, timeNow]);\n  const Komponent = component;\n  const then = (0,_dateParser__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(date).valueOf();\n  if (!then) {\n    return null;\n  }\n  const seconds = Math.round(Math.abs(timeNow - then) / 1000);\n  const suffix = then < timeNow ? 'ago' : 'from now';\n  const [value, unit] = seconds < MINUTE ? [Math.round(seconds), 'second'] : seconds < HOUR ? [Math.round(seconds / MINUTE), 'minute'] : seconds < DAY ? [Math.round(seconds / HOUR), 'hour'] : seconds < WEEK ? [Math.round(seconds / DAY), 'day'] : seconds < MONTH ? [Math.round(seconds / WEEK), 'week'] : seconds < YEAR ? [Math.round(seconds / MONTH), 'month'] : [Math.round(seconds / YEAR), 'year'];\n  const passDownTitle = typeof title === 'undefined' ? typeof date === 'string' ? date : (0,_dateParser__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(date).toISOString().substr(0, 16).replace('T', ' ') : title;\n  const spreadProps = Komponent === 'time' ? {\n    ...passDownProps,\n    dateTime: (0,_dateParser__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(date).toISOString()\n  } : passDownProps;\n  const nextFormatter = _defaultFormatter__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bind(null, value, unit, suffix);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Komponent, _extends({}, spreadProps, {\n    title: passDownTitle\n  }), formatter(value, unit, suffix, then, nextFormatter, now));\n}\n\n//# sourceURL=webpack://messenger_mf/./node_modules/react-timeago/es6/index.js?");

/***/ })

}]);